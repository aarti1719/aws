---
AWSTemplateFormatVersion: 2010-09-09
Description: "RDE API Pipeline Stack"
Parameters:
  VpcId:
    Description: The ID of the Vpc 
    Type: AWS::EC2::VPC::Id
  SubnetIds:
    Description: The subnets to place instances in.
    Type: List<AWS::EC2::Subnet::Id>      
  CodeRepo:
    Description: Code Repo Name
    Type: String

Resources:
  CodeBuildSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "${AWS::StackName}-CodeBuildSecurityGroup"
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        CidrIp : 0.0.0.0/0
        IpProtocol: -1
        FromPort: -1
        ToPort: -1

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: "cfn/cfn_pipe.buildspec_build.yml"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
      Name: !Sub '${AWS::StackName}-BuildProject'
      ServiceRole: !ImportValue rde:roles:api:buildrole
      VpcConfig:
        VpcId: !Ref VpcId
        Subnets: !Ref SubnetIds 
        SecurityGroupIds: 
          - !Ref CodeBuildSecurityGroup

  TestProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: "cfn/cfn_pipe.buildspec_test.yml"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0
        Type: LINUX_CONTAINER
      Name: !Sub "${AWS::StackName}-TestProject"
      ServiceRole: !ImportValue rde:roles:api:buildrole
      VpcConfig:
        VpcId: !Ref VpcId
        Subnets: !Ref SubnetIds 
        SecurityGroupIds: 
          - !Ref CodeBuildSecurityGroup
          
  CapProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: "cfn/cfn_pipe.buildspec_cap.yml"
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0
        Type: LINUX_CONTAINER
      Name: !Sub "${AWS::StackName}-CapProject"
      ServiceRole: !ImportValue rde:roles:api:buildrole
      VpcConfig:
        VpcId: !Ref VpcId
        Subnets: !Ref SubnetIds 
        SecurityGroupIds: 
          - !Ref CodeBuildSecurityGroup
          
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref AWS::StackName
      ArtifactStore:
        Type: S3
        Location: !ImportValue rde:api:resources:artifactbucket
        #EncryptionKey:
        #  Id: !ImportValue TODO
        #  Type: "KMS"
      RestartExecutionOnUpdate: true
      RoleArn: !ImportValue rde:roles:api:pipelinerole
      Stages:
        - Name: Source
          Actions:
            - Name: CodeCommit
              ActionTypeId:
                Category: Source
                Provider: CodeCommit
                Owner: AWS
                Version: 1
              Configuration:
                RepositoryName: !Ref CodeRepo
                PollForSourceChanges: "true"
                BranchName: "master"
              OutputArtifacts:
                - Name: Source
                
        - Name: Build
          Actions:
            - Name: "Run"
              RunOrder: 1
              ActionTypeId:
                Category: Build
                Provider: CodeBuild
                Owner: AWS
                Version: 1
              Configuration:
                ProjectName: !Ref BuildProject
                PrimarySource: Source
              InputArtifacts:
                - Name: Source 
              OutputArtifacts:
                - Name: BuildArtifacts
        
        - Name: Dev
          Actions:
            - Name: "Provision-ECS"
              RunOrder: 1
              InputArtifacts:
                - Name: Source
                - Name: BuildArtifacts
              OutputArtifacts:
                - Name: CapInfraArtifacts
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !ImportValue rde:roles:api:cfnrole
                StackName: "RDE-API-ECS-CAP"
                OutputFileName: rani_infra-out.json
                TemplateConfiguration: Source::cfn/rani_cfn_infra.config_cap.json
                TemplatePath: Source::cfn/rani_cfn_infra.yml

            - Name: "Provision-Service"
              RunOrder: 2
              InputArtifacts:
                - Name: Source
                - Name: BuildArtifacts
                - Name: CapInfraArtifacts
              OutputArtifacts:
                - Name: CapServiceArtifacts
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !ImportValue rde:roles:api:cfnrole
                StackName: "RDE-API-ECS-CAP"
                OutputFileName: rani_service-out.json
                TemplateConfiguration: BuildArtifacts::cfn/rani_cfn_service.config_cap.json
                TemplatePath: Source::cfn/rani_cfn_service.yml
